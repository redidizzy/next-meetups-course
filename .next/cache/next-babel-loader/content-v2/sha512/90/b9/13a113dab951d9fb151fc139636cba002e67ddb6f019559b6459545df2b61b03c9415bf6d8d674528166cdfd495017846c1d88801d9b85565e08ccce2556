{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rediane/learning/react/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Head } from \"next/head\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/rediane/learning/react/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","Head","HomePage","props","meetups"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,SAASC,IAAT,QAAqB,WAArB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;KATQF,Q;;AAoCT,eAAeA,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\"\nimport { MongoClient } from \"mongodb\"\nimport { Head } from \"next/head\"\n\nfunction HomePage(props) {\n  return (\n    <>\n      <Head>\n        <title>React meetups</title>\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </>\n  )\n}\n\nexport async function getStaticProps() {\n  const client = new MongoClient(\n    \"mongodb://admin:admin@cluster0-shard-00-00.wa08y.mongodb.net:27017,cluster0-shard-00-01.wa08y.mongodb.net:27017,cluster0-shard-00-02.wa08y.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-p31clz-shard-0&authSource=admin&retryWrites=true&w=majority\",\n    { useNewUrlParser: true, useUnifiedTopology: true }\n  )\n  await client.connect()\n  const db = client.db()\n\n  const meetups = await (\n    await db.collection(\"meetups\").find().toArray()\n  ).map((meetup) => ({\n    title: meetup.title,\n    address: meetup.address,\n    image: meetup.image,\n    id: meetup._id.toString(),\n  }))\n  await client.close()\n  return {\n    props: {\n      meetups,\n    },\n    revalidate: 1,\n  }\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}