{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rediane/learning/react/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(_ref) {\n  var meetup = _ref.meetup;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: meetup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: meetup.image,\n      title: meetup.title,\n      address: meetup.address,\n      description: meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/rediane/learning/react/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","meetup","title","image","address","description"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAIA,SAASC,aAAT,OAAmC;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACjC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQA,MAAM,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,MAAA,KAAK,EAAEF,MAAM,CAACC,KAFhB;AAGE,MAAA,OAAO,EAAED,MAAM,CAACG,OAHlB;AAIE,MAAA,WAAW,EAAEH,MAAM,CAACI;AAJtB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAaD;;KAdQL,a;;AAgET,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\"\n\nimport { MongoClient, ObjectId } from \"mongodb\"\n\nfunction MeetupDetails({ meetup }) {\n  return (\n    <>\n      <Head>\n        <title>{meetup.title}</title>\n      </Head>\n      <MeetupDetail\n        image={meetup.image}\n        title={meetup.title}\n        address={meetup.address}\n        description={meetup.description}\n      />\n    </>\n  )\n}\n\nexport async function getStaticPaths() {\n  const client = new MongoClient(\n    \"mongodb://admin:admin@cluster0-shard-00-00.wa08y.mongodb.net:27017,cluster0-shard-00-01.wa08y.mongodb.net:27017,cluster0-shard-00-02.wa08y.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-p31clz-shard-0&authSource=admin&retryWrites=true&w=majority\",\n    { useNewUrlParser: true, useUnifiedTopology: true }\n  )\n  await client.connect()\n  const db = client.db()\n  const meetupsCollection = db.collection(\"meetups\")\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\n  console.log(\n    meetups.map((meetup) => ({\n      params: { meetupdId: meetup._id.toString() },\n    }))\n  )\n\n  await client.close()\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  }\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId\n  const client = new MongoClient(\n    \"mongodb://admin:admin@cluster0-shard-00-00.wa08y.mongodb.net:27017,cluster0-shard-00-01.wa08y.mongodb.net:27017,cluster0-shard-00-02.wa08y.mongodb.net:27017/meetups?ssl=true&replicaSet=atlas-p31clz-shard-0&authSource=admin&retryWrites=true&w=majority\",\n    { useNewUrlParser: true, useUnifiedTopology: true }\n  )\n  await client.connect()\n  const db = client.db()\n  const meetupsCollection = db.collection(\"meetups\")\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) })\n\n  return {\n    props: {\n      meetup: {\n        ...meetup,\n        id: meetup._id.toString(),\n        _id: null,\n      },\n    },\n    revalidate: 1,\n  }\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}